name: Deploy project
on:
  push:
    branches:
      - main
  #    paths-ignore:
  #      - '.github/workflows/**'
  workflow_dispatch: # Allows to run the workflow manually
    branches:
      - main
  pull_request:
    types:
      - opened
    branches:
      - main
env:
  NX_BASE_URL_API: 'http://localhost:8080/api'
  NX_API_JSON_PLACEHOLDER: 'https://jsonplaceholder.typicode.com'
  NX_TASK_TARGET_CONFIGURATION: "dev"
jobs:
  test-lint:
    environment: Testing
    env:
      NX_TASK_TARGET_CONFIGURATION: "testing"
      NX_USER_SECRET: ${{secrets.NX_USER_SECRET}}
    runs-on: ubuntu-latest
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: Install NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test:coverage
      - name: Run linter
        run: npm run lint
      - name: Output ENV variables
        run: |
              echo "ENVs,${{env}}"
              echo "SECRET,${{secrets.NX_USER_SECRET}}"
  build:
    needs: [ test-lint ]
    runs-on: ubuntu-latest
    outputs:
      script-output: ${{ steps.publish.outputs.script-output}}
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: Install NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Publish JS file
        id: publish
        run: find dist/apps/about/remoteEntry.js -type f -execdir echo 'script-output={}' >> $GITHUB_OUTPUT ';'
      #        run:  find dist/apps/about/*.js -type f -execdir echo 'script-output={}' >> $GITHUB_OUTPUT ';'
      #        run:  find dist/apps/about/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: coverage

  deploy:
    needs: [ test-lint ,build ]
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Get Test coverage
        uses: actions/download-artifact@v3
        with:
          name: test-coverage
      #          path: dist
      - name: Output content of dist folder
        run: ls
      - name: Output files
        run: echo ${{ needs.build.outputs.script-output }}
      - name: Deploy
        run: |
          echo "Deploying the project..."
          echo "Done!"
